/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.loja.informatica.VIEWS;

import com.loja.informatica.CONTROLLER.ControllerVenda;
import com.loja.informatica.MODEL.cliente;
import com.loja.informatica.MODEL.tabelaCliente;
import com.loja.informatica.UTILS.soCaracteres;
import com.loja.informatica.UTILS.soNumeros;
import com.loja.informatica.UTILS.conexaoBancoDeDados;
import com.loja.informatica.CONTROLLER.controllerCliente;
import com.loja.informatica.UTILS.ConexaoMysql;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.parser.TokenType;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Juliano
 */
public class telaVendedor extends javax.swing.JFrame {

    boolean pesquisar = false;//Variavel para ativar ou desativar o modo buscar cliente
    Double valorFinal = 0.0;//Variavel para salvar o valor final da compra
    boolean venda = false;//Variavel para inicicar venda

    controllerCliente controle = new controllerCliente();//Chama classe para Cadastrar, Pesquisar, Alterar e Excluir cliente
    conexaoBancoDeDados conectar = new conexaoBancoDeDados();//Classe para conectar e dasconectar do banco de dados

    /**
     * Creates new form telaVendedor
     */
    public telaVendedor() {
        initComponents();
        txtNum.setDocument(new soNumeros());//Importação da classe que aceita somente numeros
        txtNome.setDocument(new soCaracteres());//Importação da classe que aceita somentes letras e acentos
        txtRua.setDocument(new soCaracteres());//Importação da classe que aceita somentes letras e acentos
        txtBairro.setDocument(new soCaracteres());//Importação da classe que aceita somentes letras e acentos

        //Implementacao da classe ValidacaoDeCampos na aba de venda
        txtCarrinhoID.setDocument(new soNumeros());
        txtCarrinhoQuantidade.setDocument(new soNumeros());
        txtFiltroTipo.setDocument(new soCaracteres());
        txtFiltroMarca.setDocument(new soCaracteres());
        carregarRegistrosCliente();
        carregarTabelaProdutos();
        bloquearCarrinho();

    }

    /**
     *
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFiltroTipo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFiltroModelo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaVenda = new javax.swing.JTable();
        txtFiltroMarca = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaCarrinho = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        txtValorFinal = new javax.swing.JTextField();
        btFinalizarCompra = new javax.swing.JButton();
        btAdicionar = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtCarrinhoQuantidade = new javax.swing.JTextField();
        txtCarrinhoID = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        btLimparCarrinho = new javax.swing.JButton();
        txtCpfCompra = new javax.swing.JFormattedTextField();
        btIniciarVenda = new javax.swing.JButton();
        btCancelarVenda = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        jLabel34 = new javax.swing.JLabel();
        comboSexo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        comboECivil = new javax.swing.JComboBox<>();
        txtID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtFone = new javax.swing.JFormattedTextField();
        btSalvar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        txtBCpf = new javax.swing.JFormattedTextField();
        btEditar = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        jPvendaRealizada = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVendaRealizada = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtBuscaNumeroCompra = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtBuscaCpf = new javax.swing.JFormattedTextField();

        jLabel2.setText("jLabel2");

        jCheckBox1.setText("jCheckBox1");

        jButton3.setText("jButton3");

        jButton6.setText("jButton6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(800, 630));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Realizar Venda"));

        jLabel30.setText("Cpf: *");

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        jLabel1.setText("Tipo");

        txtFiltroTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroTipoActionPerformed(evt);
            }
        });
        txtFiltroTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroTipoKeyTyped(evt);
            }
        });

        jLabel3.setText("Modelo:");

        txtFiltroModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroModeloKeyTyped(evt);
            }
        });

        jLabel12.setText("Marca:");

        tabelaVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaVenda.getTableHeader().setReorderingAllowed(false);
        tabelaVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVendaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaVenda);

        txtFiltroMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroMarcaActionPerformed(evt);
            }
        });
        txtFiltroMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroMarcaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltroTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltroModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltroMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFiltroTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtFiltroModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtFiltroMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Carrinho"));

        tabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "ID", "Marca", "Quantidade", "Preço"
            }
        ));
        tabelaCarrinho.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tabelaCarrinho);

        jLabel33.setText("Valor Final R$:");

        txtValorFinal.setEnabled(false);
        txtValorFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorFinalActionPerformed(evt);
            }
        });

        btFinalizarCompra.setText("Finalizar");
        btFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarCompraActionPerformed(evt);
            }
        });

        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        jLabel31.setText("#ID produto:");

        txtCarrinhoQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarrinhoQuantidadeActionPerformed(evt);
            }
        });

        txtCarrinhoID.setEnabled(false);
        txtCarrinhoID.setFocusable(false);

        jLabel32.setText("Quantidade");

        btLimparCarrinho.setText("Limpar");
        btLimparCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparCarrinhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btFinalizarCompra))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCarrinhoID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCarrinhoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btAdicionar)
                        .addGap(18, 18, 18)
                        .addComponent(btLimparCarrinho)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(txtCarrinhoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(txtCarrinhoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdicionar)
                    .addComponent(btLimparCarrinho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFinalizarCompra)
                    .addComponent(txtValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addContainerGap())
        );

        try {
            txtCpfCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btIniciarVenda.setText("Buscar");
        btIniciarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIniciarVendaActionPerformed(evt);
            }
        });

        btCancelarVenda.setText("Cancelar");
        btCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpfCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btIniciarVenda)
                        .addGap(18, 18, 18)
                        .addComponent(btCancelarVenda)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(txtCpfCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btIniciarVenda)
                    .addComponent(btCancelarVenda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Venda", jPanel1);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro"));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Pessoais"));

        jLabel6.setText("#ID:");

        jLabel7.setText("Nome Completo: *");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        jLabel8.setText("Data de Nascimento: *");

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });

        jLabel9.setText("Cpf: *");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel34.setText("Sexo:");

        comboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Feminino", "Masculino", "Outro" }));
        comboSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSexoActionPerformed(evt);
            }
        });

        jLabel13.setText("Estado Civil:");

        comboECivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solteiro", "Casado", "Outro" }));

        txtID.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNome))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboECivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel34)
                    .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(comboECivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        jLabel10.setText("Rua:");

        jLabel19.setText("Cep:");

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel20.setText("Nº:");

        jLabel21.setText("Bairro:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRua))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBairro)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Contato"));

        jLabel22.setText("E-mail: *");

        jLabel23.setText("Fone:");

        try {
            txtFone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btNovo)
                .addGap(18, 18, 18)
                .addComponent(btSalvar)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btNovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar/Alterar"));

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaClienteMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tabelaCliente);

        jLabel15.setText("Cpf:");

        try {
            txtBCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBCpfActionPerformed(evt);
            }
        });
        txtBCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBCpfKeyTyped(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btDeletar.setText("Deletar");
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btDeletar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtBCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditar)
                    .addComponent(btBuscar)
                    .addComponent(btDeletar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cliente", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Historico de Vendas"));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabela"));

        tblVendaRealizada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Modelo", "Marca", "Nº da compra", "Quantidade", "Data", "Valor", "CPF"
            }
        ));
        jScrollPane1.setViewportView(tblVendaRealizada);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        jLabel11.setText("Nº da compra:");

        txtBuscaNumeroCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaNumeroCompraActionPerformed(evt);
            }
        });
        txtBuscaNumeroCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaNumeroCompraKeyTyped(evt);
            }
        });

        jLabel16.setText("Cpf:");

        try {
            txtBuscaCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBuscaCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaCpfActionPerformed(evt);
            }
        });
        txtBuscaCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaCpfKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscaCpf))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscaNumeroCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)))
                .addGap(157, 157, 157))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscaCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtBuscaNumeroCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPvendaRealizadaLayout = new javax.swing.GroupLayout(jPvendaRealizada);
        jPvendaRealizada.setLayout(jPvendaRealizadaLayout);
        jPvendaRealizadaLayout.setHorizontalGroup(
            jPvendaRealizadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPvendaRealizadaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPvendaRealizadaLayout.setVerticalGroup(
            jPvendaRealizadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPvendaRealizadaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vendas Realizadas", jPvendaRealizada);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    TableRowSorter trs;
    private void txtValorFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorFinalActionPerformed

    private void comboSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSexoActionPerformed

    private void txtBuscaNumeroCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaNumeroCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaNumeroCompraActionPerformed

    private void txtCarrinhoQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarrinhoQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarrinhoQuantidadeActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked

        String itensTeste[][]
                = {
                    {"RTX2080", "Nvidia", "1000", "1", "10/01/2020", "2.999,00", "333.003.555-33"},
                    {"GTX970", "Nvidia", "1000", "2", "10/01/2020", "999,00", "333.003.555-33"},
                    {"V100S", "Nvidia", "1000", "3", "10/01/2020", "899,00", "333.003.555-33"},
                    {"RTX8000", "Nvidia", "1001", "1", "11/01/2020", "3.999,00", "133.903.156-03"},
                    {"AORUS B630M", "Asus", "1002", "10", "11/01/2020", "486,00", "133.003.555-99"},
                    {"AMD RYZEN 3", "AMD", "1002", "4", "13/01/2020", "999,00", "133.003.555-99"},
                    {"RTX2080", "Nvidia", "1003", "2", "13/01/2020", "2.999,00", "333.003.535-53"},
                    {"I5-9600KF", "INTEL", "1003", "1", "19/01/2020", "1.209,97", "333.003.535-53"},
                    {"LOGITECH mk345", "LOGITECH", "1004", "1", "20/01/2020", "350,00", "233.003.255-31"},
                    {"RTX8000", "Nvidia", "1005", "1", "21/01/2020", "3.999,00", "633.303.555-30"},
                    {"RTX2080", "Nvidia", "1005", "2", "21/01/2020", "2.999,00", "633.303.555-30"},
                    {"AORUS B630M", "Asus", "1006", "3", "22/01/2020", "486,00", "633.503.255-34"},
                    {"RTX2080", "Nvidia", "1007", "6", "01/02/2020", "2.999,00", "933.503.555-39"},
                    {"I5-9600KF", "INTEL", "1008", "1", "01/02/2020", "1.209,97", "333.003.255-32"},
                    {"RTX2080", "Nvidia", "1009", "2", "02/02/2020", "2.999,00", "233.003.555-31"},
                    {"I5-9600KF", "INTEL", "1009", "3", "02/02/2020", "1.209,97", "233.003.555-31"},
                    {"AORUS B630M", "Asus", "1010", "2", "10/02/2020", "486,00", "233.303.955-96"},
                    {"AMD RYZEN 3", "AMD", "1011", "1", "10/02/2020", "999,00", "333.803.555-34"},
                    {"I5-9600KF", "INTEL", "1012", "1", "11/02/2020", "1.209,97", "233.003.555-31"},
                    {"LOGITECH mk345", "LOGITECH", "1012", "1", "11/02/2020", "350,00", "233.003.555-31"},};

        //resgata o modelo da tabela e atribui a uma variavel do tipo DefaultTableModel
        DefaultTableModel model = (DefaultTableModel) tblVendaRealizada.getModel();

        //adiciona os valores do objeto "produto" a linha da tabela
        for (int i = 0; i < itensTeste.length; i++) {
            model.addRow(new Object[]{itensTeste[i][0],
                itensTeste[i][1],
                itensTeste[i][2],
                itensTeste[i][3],
                itensTeste[i][4],
                itensTeste[i][5],
                itensTeste[i][6],});

        }

        //System.out.println(itensTeste[0][6]);
        //System.out.println(itensTeste[3][6]);
        //System.out.println(itensTeste[7][6]);

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void txtBuscaNumeroCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaNumeroCompraKeyTyped
        // TODO add your handling code here:

        txtBuscaNumeroCompra.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(txtBuscaNumeroCompra.getText(), 2));
            }
        });

        DefaultTableModel model = (DefaultTableModel) tblVendaRealizada.getModel();
        trs = new TableRowSorter(model);
        tblVendaRealizada.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscaNumeroCompraKeyTyped

    private void txtBuscaCpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaCpfKeyTyped

        //System.out.println(txtBuscaCpf.getText().replaceAll("\\D", ""));
        //System.out.println(txtBuscaCpf.getText());
        txtBuscaCpf.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {

                trs.setRowFilter(RowFilter.regexFilter(txtBuscaCpf.getText(), 6));

            }
        });
        DefaultTableModel model = (DefaultTableModel) tblVendaRealizada.getModel();
        trs = new TableRowSorter(model);
        tblVendaRealizada.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscaCpfKeyTyped

    private void txtBuscaCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaCpfActionPerformed
        // TODO add your handling code here:       
    }//GEN-LAST:event_txtBuscaCpfActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:

        try {

            cliente cliente = new cliente();

            if (pesquisar == false) {//Modo buscar cliente desativado

                if (txtNome.getText().trim().equals("")) {//Validar se o campo esta vazios
                    txtNome.requestFocus();//Se o campo estiver vazio ao apertar o botão salvar tera um foco no campo para digitar os valores 
                    JOptionPane.showMessageDialog(null, "Campo Nome incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);//Aviso de campo vazio
                    return;
                }
                if (txtData.getText().equals("  /  /    ")) {
                    txtData.requestFocus();
                    JOptionPane.showMessageDialog(null, "Campo Data incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if (txtCpf.getText().equals("   .   .   -  ")) {
                    txtCpf.requestFocus();
                    JOptionPane.showMessageDialog(null, "Campo Cpf incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if (txtEmail.getText().trim().equals("")) {
                    txtEmail.requestFocus();
                    JOptionPane.showMessageDialog(null, "Campo Email incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                //Pega os valores digitados para salvar no banco de dados
                if (txtNum.getText().equals("")) {
                    cliente.setNumeroCasa(0);
                } else {
                    cliente.setNumeroCasa((Integer.parseInt(txtNum.getText())));
                }
                cliente.setNome(txtNome.getText());
                cliente.setData(txtData.getText());
                cliente.setCpf(txtCpf.getText());
                cliente.setSexo(comboSexo.getSelectedItem().toString());
                cliente.setEstadoCivil(comboECivil.getSelectedItem().toString());
                cliente.setRua(txtRua.getText());
                cliente.setCep(txtCep.getText());
                cliente.setBairro(txtBairro.getText());
                cliente.setEmail(txtEmail.getText());
                cliente.setTelefone(txtFone.getText());

                boolean retorno = controllerCliente.CadastrarCliente(cliente.getNome(), cliente.getData(), cliente.getCpf(), cliente.getSexo(),
                        cliente.getEstadoCivil(), cliente.getRua(), cliente.getCep(), cliente.getNumeroCasa(), cliente.getBairro(),
                        cliente.getEmail(), cliente.getTelefone());

                if (retorno == true) {
                    JOptionPane.showMessageDialog(this, "Cadastro Efetuado com Sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao efetuar cadastro!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                }

                limparCampos();
                carregarRegistrosCliente();

            } else {//Modo pesquisar cliente ativado

                if (txtNome.getText().trim().equals("")) {//Validar se o campo esta vazios
                    txtNome.requestFocus();//Se o campo estiver vazio ao apertar o botão salvar tera um foco no campo para digitar os valores 
                    JOptionPane.showMessageDialog(null, "Campo Nome incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);//Aviso de campo vazio
                    return;
                }
                if (txtData.getText().equals("  /  /    ")) {
                    txtData.requestFocus();
                    JOptionPane.showMessageDialog(null, "Campo Data incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if (txtCpf.getText().equals("   .   .   -  ")) {
                    txtCpf.requestFocus();
                    JOptionPane.showMessageDialog(null, "Campo Cpf incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if (txtEmail.getText().trim().equals("")) {
                    txtEmail.requestFocus();
                    JOptionPane.showMessageDialog(null, "Campo Email incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                //Altera os valores do banco de dados
                if (txtNum.getText().equals("")) {
                    cliente.setNumeroCasa(0);
                } else {
                    cliente.setNumeroCasa((Integer.parseInt(txtNum.getText())));
                }

                cliente.setNome(txtNome.getText());
                cliente.setData(txtData.getText());
                cliente.setSexo(comboSexo.getSelectedItem().toString());
                cliente.setEstadoCivil(comboECivil.getSelectedItem().toString());
                cliente.setRua(txtRua.getText());
                cliente.setCep(txtCep.getText());
                cliente.setBairro(txtBairro.getText());
                cliente.setEmail(txtEmail.getText());
                cliente.setTelefone(txtFone.getText());
                cliente.setCpf(txtCpf.getText());

                boolean retorno = controllerCliente.AlterarCliente(cliente.getNome(), cliente.getData(), cliente.getSexo(),
                        cliente.getEstadoCivil(), cliente.getRua(), cliente.getCep(), cliente.getNumeroCasa(), cliente.getBairro(),
                        cliente.getEmail(), cliente.getTelefone(), cliente.getCpf());

                if (retorno == true) {
                    JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao alterar Registro!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                }

                limparCampos();
                carregarRegistrosCliente();

                txtCpf.setEnabled(true);

                pesquisar = false;//Desativa o modo pesquisar cliente
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cadastro não efetuado");
        }


    }//GEN-LAST:event_btSalvarActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed

        ArrayList<String[]> listarRegistros = controllerCliente.BuscarRegistro(txtBCpf.getText());
        DefaultTableModel tabelaRegistros = new DefaultTableModel();

        tabelaRegistros.addColumn("ID");
        tabelaRegistros.addColumn("Nome");
        tabelaRegistros.addColumn("Data");
        tabelaRegistros.addColumn("CPF");
        tabelaRegistros.addColumn("Sexo");
        tabelaRegistros.addColumn("Estado Civil");
        tabelaRegistros.addColumn("Rua");
        tabelaRegistros.addColumn("Cep");
        tabelaRegistros.addColumn("N° Casa");
        tabelaRegistros.addColumn("Bairro");
        tabelaRegistros.addColumn("Email");
        tabelaRegistros.addColumn("Telefone");

        tabelaCliente.setModel(tabelaRegistros);

        for (String[] percorrerRegistros : listarRegistros) {
            tabelaRegistros.addRow(new String[]{
                percorrerRegistros[0],
                percorrerRegistros[1],
                percorrerRegistros[2],
                percorrerRegistros[3],
                percorrerRegistros[4],
                percorrerRegistros[5],
                percorrerRegistros[6],
                percorrerRegistros[7],
                percorrerRegistros[8],
                percorrerRegistros[9],
                percorrerRegistros[10],
                percorrerRegistros[11]});
        }

        cliente cliente = new cliente();
        pesquisar = true;//Ativa o modo pesquisar cliente

        cliente.setCpf(txtBCpf.getText());

        //Manda para a classe buscarCampo o valor a ser pesquisado
        //modelo.setPesquisar(txtBCpf.getText());
        //Cliente mod = controle.buscarCampo(modelo);
        //Imprime nos campos de texto os dados do cliente pesquisado
        txtID.setText(String.valueOf(cliente.getId()));
        txtNome.setText(cliente.getNome());
        txtData.setText(cliente.getData());
        txtCpf.setText(cliente.getCpf());
        comboSexo.setSelectedItem(cliente.getSexo());
        comboECivil.setSelectedItem(cliente.getEstadoCivil());
        txtRua.setText(cliente.getRua());
        txtCep.setText(cliente.getCep());
        txtNum.setText(String.valueOf(cliente.getNumeroCasa()));
        txtBairro.setText(cliente.getBairro());
        txtEmail.setText(cliente.getEmail());
        txtFone.setText(cliente.getTelefone());

        //Desabilita os campos de texto
        txtNome.setEnabled(false);
        txtData.setEnabled(false);
        txtCpf.setEnabled(false);
        comboSexo.setEnabled(false);
        comboECivil.setEnabled(false);
        txtRua.setEnabled(false);
        txtCep.setEnabled(false);
        txtNum.setEnabled(false);
        txtBairro.setEnabled(false);
        txtEmail.setEnabled(false);
        txtFone.setEnabled(false);
        btSalvar.setEnabled(false);


    }//GEN-LAST:event_btBuscarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        carregarRegistrosCliente();

        limparCampos();

        //Ativa os campos de digitação
        txtNome.setEnabled(true);
        txtData.setEnabled(true);
        txtCpf.setEnabled(true);
        comboSexo.setEnabled(true);
        comboECivil.setEnabled(true);
        txtRua.setEnabled(true);
        txtCep.setEnabled(true);
        txtNum.setEnabled(true);
        txtBairro.setEnabled(true);
        txtEmail.setEnabled(true);
        txtFone.setEnabled(true);
        btSalvar.setEnabled(true);

        pesquisar = false;//Modo pesquisar cliente desativado
    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        //Ativa os campos de digitação para alterar os dados
        txtNome.setEnabled(true);
        txtData.setEnabled(true);
        comboSexo.setEnabled(true);
        comboECivil.setEnabled(true);
        txtRua.setEnabled(true);
        txtCep.setEnabled(true);
        txtNum.setEnabled(true);
        txtBairro.setEnabled(true);
        txtEmail.setEnabled(true);
        txtFone.setEnabled(true);
        btSalvar.setEnabled(true);

    }//GEN-LAST:event_btEditarActionPerformed

    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed

        int resposta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o registro?", "Aviso!", JOptionPane.INFORMATION_MESSAGE);

        if (resposta == 0) {
            try {
                int cpf = Integer.parseInt(txtID.getText());

                boolean retorno = controllerCliente.ExcluirRegistro(cpf);

                if (retorno == true) {
                    JOptionPane.showMessageDialog(this, "Registro Excluido com sucesso!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                    limparCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao Excluir registro!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                    limparCampos();
                }
            } catch (Exception e) {
                System.out.print("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Operação Cancelada!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
        }

        carregarRegistrosCliente();
        limparCampos();

        //ativa os campos de digitação
        txtNome.setEnabled(true);
        txtData.setEnabled(true);
        txtCpf.setEnabled(true);
        comboSexo.setEnabled(true);
        comboECivil.setEnabled(true);
        txtRua.setEnabled(true);
        txtCep.setEnabled(true);
        txtNum.setEnabled(true);
        txtBairro.setEnabled(true);
        txtEmail.setEnabled(true);
        txtFone.setEnabled(true);


    }//GEN-LAST:event_btDeletarActionPerformed

    private void txtBCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBCpfActionPerformed
        // TODO add your handling code here:   
    }//GEN-LAST:event_txtBCpfActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtFiltroTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroTipoActionPerformed

    private void txtFiltroTipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTipoKeyTyped
        // TODO add your handling code here:         
        txtFiltroTipo.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(txtFiltroTipo.getText(), 0));
            }
        });

        DefaultTableModel tblVenda = (DefaultTableModel) tabelaVenda.getModel();
        trs = new TableRowSorter(tblVenda);
        tabelaVenda.setRowSorter(trs);
    }//GEN-LAST:event_txtFiltroTipoKeyTyped

    private void txtFiltroModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroModeloKeyTyped
        // TODO add your handling code here:
        txtFiltroModelo.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(txtFiltroModelo.getText(), 1));
            }
        });

        DefaultTableModel tblVenda = (DefaultTableModel) tabelaVenda.getModel();
        trs = new TableRowSorter(tblVenda);
        tabelaVenda.setRowSorter(trs);
    }//GEN-LAST:event_txtFiltroModeloKeyTyped

    private void txtFiltroMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroMarcaActionPerformed

    private void txtFiltroMarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroMarcaKeyTyped
        // TODO add your handling code here:
        txtFiltroMarca.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(txtFiltroMarca.getText(), 2));
            }
        });

        DefaultTableModel tblVenda = (DefaultTableModel) tabelaVenda.getModel();
        trs = new TableRowSorter(tblVenda);
        tabelaVenda.setRowSorter(trs);
    }//GEN-LAST:event_txtFiltroMarcaKeyTyped

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        // TODO add your handling code here:

        int quantidade;//Variavel para salvar a quantidade de produtos
        double valor;//Variavel para salvar o valor dos produtos
        boolean adicionar = false;//Variavel para saber se ID do produto foi encontrado

        //Matriz para usar de referencia dos valor da tabela
        String estoque[][]
                = {
                    {"Placa de Video", "RTX2080", "Nvidia", "1000", "2999.00", "33"},
                    {"Placa de Video", "GTX970", "Nvidia", "1001", "499.00", "33"},
                    {"Placa de Video", "V100S", "Nvidia", "1002", "299.00", "33"},
                    {"Placa de Video", "RTX8000", "Nvidia", "1004", "3999.00", "03"},
                    {"Placa Mãe", "AORUS B630M", "Asus", "1003", "486.00", "99"},
                    {"Processador", "AMD RYZEN 3", "AMD", "1005", "999.00", "99"},
                    {"Processador", "I5-9600KF", "INTEL", "1006", "1209.00", "53"},
                    {"HD", "ST1000DM010", "Seagate", "1007", "486.00", "96"},
                    {"Processador", "AMD RYZEN 7", "AMD", "1008", "999.00", "34"},
                    {"Processador", "I7-9600KF", "INTEL", "42", "1209.00", "31"},
                    {"Teclado", "Mx Master 2S", "LOGITECH", "1042", "350.00", "31"},};

        try {
            //Verifica se o campo ID do produto esta vazio
            if (txtCarrinhoID.getText().trim().equals("")) {
                txtCarrinhoID.requestFocus();
                JOptionPane.showMessageDialog(null, "ID vazio", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            //Varifica se o campo Quantidade esta vazio
            if (txtCarrinhoQuantidade.getText().trim().equals("")) {
                txtCarrinhoQuantidade.requestFocus();
                JOptionPane.showMessageDialog(null, "Quantidade vazio", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                return;
            }

            DefaultTableModel tblCarrinho = (DefaultTableModel) tabelaCarrinho.getModel();

            String busca = txtCarrinhoID.getText();//String que recebe o ID do produto para buscar na tabela

            //Quantidade digitada e transformada em numero inteiro
            quantidade = Integer.parseInt(txtCarrinhoQuantidade.getText());

            //Busca na tabela o ID digitado
            for (int i = 0; i < estoque.length; i++) {
                if (busca.equals(estoque[i][3])) {

                    //Adiciona na tabela carrinho os dados do produto
                    tblCarrinho.addRow(new Object[]{
                        estoque[i][0],
                        estoque[i][1],
                        estoque[i][2],
                        estoque[i][3],
                        estoque[i][4],
                        quantidade,});

                    //Limpa os campos de digitação
                    txtCarrinhoID.setText("");
                    txtCarrinhoQuantidade.setText("");

                    //Valor do produto pesquisado em transformado em numero
                    valor = Double.parseDouble(estoque[i][4]);

                    //Conta para saber o valor final da compra
                    valorFinal += valor * quantidade;

                    //Valor final e transformado em String
                    String valFinal = String.valueOf(valorFinal);

                    //Campo de texto valor final recebe a String com o valor final
                    txtValorFinal.setText(valFinal);

                    adicionar = true;
                }

            }
            if (adicionar == false) {
                JOptionPane.showMessageDialog(null, "ID não encontrado");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro!!!");
        }


    }//GEN-LAST:event_btAdicionarActionPerformed

    private void tabelaVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendaMouseClicked

        if (venda == true) {
            int quan;//Variavel para salvar a quantidade de produtos
            double valor;//Variavel para salvar o valor dos produtos
            boolean x = false;
            String valores[] = new String[5];

            String quantidade = JOptionPane.showInputDialog("Quantidade: ");

            DefaultTableModel tblCarrinho = (DefaultTableModel) tabelaCarrinho.getModel();

            String id = (tabelaVenda.getValueAt(tabelaVenda.getSelectedRow(), 1).toString());

            for (int i = 0; i < tabelaCarrinho.getRowCount(); i++) {
                if (id.equals(tabelaCarrinho.getModel().getValueAt(i, 1))) {
                    quan = Integer.parseInt((tabelaCarrinho.getValueAt(i, 3).toString()));
                    valor = Double.parseDouble((tabelaCarrinho.getValueAt(i, 4).toString()));
                    valorFinal = valorFinal - (quan * valor);
                    tblCarrinho.removeRow(i);

                }
            }

            valores[0] = (tabelaVenda.getValueAt(tabelaVenda.getSelectedRow(), 0).toString());
            valores[1] = (tabelaVenda.getValueAt(tabelaVenda.getSelectedRow(), 1).toString());
            valores[2] = (tabelaVenda.getValueAt(tabelaVenda.getSelectedRow(), 2).toString());
            valores[3] = (tabelaVenda.getValueAt(tabelaVenda.getSelectedRow(), 3).toString());
            valores[4] = (tabelaVenda.getValueAt(tabelaVenda.getSelectedRow(), 4).toString());

            tblCarrinho.addRow(new Object[]{
                valores[0],
                valores[1],
                valores[2],
                quantidade,
                valores[4],
                quantidade,});

            //Valor do produto pesquisado em transformado em numero
            valor = Double.parseDouble(valores[4]);

            quan = Integer.parseInt(quantidade);

            //Conta para saber o valor final da compra
            valorFinal += valor * quan;

            //Valor final e transformado em String
            String valFinal = String.valueOf(valorFinal);

            //Campo de texto valor final recebe a String com o valor final
            txtValorFinal.setText(valFinal);

        } else {
            JOptionPane.showMessageDialog(null, "Venda não iniciada");
        }


    }//GEN-LAST:event_tabelaVendaMouseClicked

    private void btLimparCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparCarrinhoActionPerformed
        LimparCarrinho();
    }//GEN-LAST:event_btLimparCarrinhoActionPerformed

    private void btFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarCompraActionPerformed
        // TODO add your handling code here:
        try {
            //Verifica se o campo de texto Cpf esta vazio
            if (txtCpfCompra.getText().equals("   .   .   -  ")) {
                txtCpfCompra.requestFocus();
                JOptionPane.showMessageDialog(null, "Campo Cpf incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            DefaultTableModel tblCarrinho = (DefaultTableModel) tabelaCarrinho.getModel();

            //Verifica se na tabela carrinho existe algum item
            if (tabelaCarrinho.getRowCount() > 0) {
                //For para limpar os dados da tabela carrinho
                for (int i = tabelaCarrinho.getRowCount() - 1; i >= 0; i--) {
                    tblCarrinho.removeRow(i);
                }
                //Limpa os campos de texto
                txtCpfCompra.setText("");
                txtCarrinhoID.setText("");
                txtCarrinhoQuantidade.setText("");

                //Valor final recebe 0
                valorFinal = 0.0;
                //Valor final e transformado emString
                String valFinal = String.valueOf(valorFinal);
                //Imprime no campo de texto valor final 
                txtValorFinal.setText(valFinal);

                JOptionPane.showMessageDialog(null, "Compra Finalizada");

            } else {
                JOptionPane.showMessageDialog(null, "Carrinho vazio");
                txtCarrinhoID.requestFocus();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro!!!");
        }

    }//GEN-LAST:event_btFinalizarCompraActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void tabelaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClienteMouseClicked
        pesquisar = true;//Ativa o modo pesquisar cliente

        txtID.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 0).toString());
        txtNome.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 1).toString());
        txtData.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 2).toString());
        txtCpf.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 3).toString());
        txtBCpf.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 3).toString());
        comboSexo.setSelectedItem(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 4).toString());
        comboECivil.setSelectedItem(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 5).toString());
        txtRua.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 6).toString());
        txtCep.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 7).toString());
        txtNum.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 8).toString());
        txtBairro.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 9).toString());
        txtEmail.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 10).toString());
        txtFone.setText(tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 11).toString());

        //Desativa os campos de digitação
        txtNome.setEnabled(false);
        txtData.setEnabled(false);
        txtCpf.setEnabled(false);
        comboSexo.setEnabled(false);
        comboECivil.setEnabled(false);
        txtRua.setEnabled(false);
        txtCep.setEnabled(false);
        txtNum.setEnabled(false);
        txtBairro.setEnabled(false);
        txtEmail.setEnabled(false);
        txtFone.setEnabled(false);
        btSalvar.setEnabled(false);
    }//GEN-LAST:event_tabelaClienteMouseClicked

    private void txtBCpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBCpfKeyTyped

    }//GEN-LAST:event_txtBCpfKeyTyped

    private void btIniciarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIniciarVendaActionPerformed
        if (txtCpfCompra.getText().equals("   .   .   -  ")) {
            txtCpfCompra.requestFocus();
            JOptionPane.showMessageDialog(null, "Campo Cpf incorreto", "Aviso!!!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        for (int i = 0; i < tabelaCliente.getRowCount(); i++) {
            if (txtCpfCompra.getText().equals(tabelaCliente.getModel().getValueAt(i, 3))) {
                venda = true;
            }

        }
        if (venda == true) {
            iniciarVenda();
            txtCpfCompra.setEnabled(false);
            btIniciarVenda.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Venda Iniciada!!!");

        } else {
            JOptionPane.showMessageDialog(null, "CPF não encontrado!!!");
        }


    }//GEN-LAST:event_btIniciarVendaActionPerformed

    private void btCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarVendaActionPerformed
        LimparCarrinho();
        bloquearCarrinho();
        txtCpfCompra.setText("");
        txtCpfCompra.setEnabled(true);
        btIniciarVenda.setEnabled(true);
        JOptionPane.showMessageDialog(null, "Venda Cancelada!!!");

    }//GEN-LAST:event_btCancelarVendaActionPerformed

    public void carregarRegistrosCliente() {

        ArrayList<String[]> listarRegistros = controllerCliente.CarregarRegistros();
        DefaultTableModel tabelaRegistros = new DefaultTableModel();

        tabelaRegistros.addColumn("ID");
        tabelaRegistros.addColumn("Nome");
        tabelaRegistros.addColumn("Data");
        tabelaRegistros.addColumn("CPF");
        tabelaRegistros.addColumn("Sexo");
        tabelaRegistros.addColumn("Estado Civil");
        tabelaRegistros.addColumn("Rua");
        tabelaRegistros.addColumn("Cep");
        tabelaRegistros.addColumn("N° Casa");
        tabelaRegistros.addColumn("Bairro");
        tabelaRegistros.addColumn("Email");
        tabelaRegistros.addColumn("Telefone");

        tabelaCliente.setModel(tabelaRegistros);

        for (String[] percorrerRegistros : listarRegistros) {
            tabelaRegistros.addRow(new String[]{
                percorrerRegistros[0],
                percorrerRegistros[1],
                percorrerRegistros[2],
                percorrerRegistros[3],
                percorrerRegistros[4],
                percorrerRegistros[5],
                percorrerRegistros[6],
                percorrerRegistros[7],
                percorrerRegistros[8],
                percorrerRegistros[9],
                percorrerRegistros[10],
                percorrerRegistros[11]});
        }
        tabelaCliente.setDefaultEditor(Object.class, null);
    }

    public void carregarTabelaProdutos() {
        ArrayList<String[]> listarRegistros = ControllerVenda.CarregarProdutos();
        DefaultTableModel tabelaRegistros = new DefaultTableModel();

        tabelaRegistros.addColumn("Tipo");
        tabelaRegistros.addColumn("ID");
        tabelaRegistros.addColumn("Marca");
        tabelaRegistros.addColumn("Quantidade");
        tabelaRegistros.addColumn("Preço");

        tabelaVenda.setModel(tabelaRegistros);

        for (String[] percorrerRegistros : listarRegistros) {
            tabelaRegistros.addRow(new String[]{
                percorrerRegistros[0],
                percorrerRegistros[1],
                percorrerRegistros[2],
                percorrerRegistros[3],
                percorrerRegistros[4]});
        }
        tabelaVenda.setDefaultEditor(Object.class, null);

    }

    public void limparCampos() {
        txtNome.setText("");
        txtData.setText("");
        txtCpf.setText("");
        txtRua.setText("");
        txtCep.setText("");
        txtNum.setText("");
        txtBairro.setText("");
        txtEmail.setText("");
        txtFone.setText("");
        txtBCpf.setText("");
        txtID.setText("");
    }

    public void bloquearCarrinho() {
        txtCarrinhoID.setEnabled(false);
        txtCarrinhoQuantidade.setEnabled(false);
        btAdicionar.setEnabled(false);
        btLimparCarrinho.setEnabled(false);
        tabelaCarrinho.setEnabled(false);
        btFinalizarCompra.setEnabled(false);

    }

    public void iniciarVenda() {
        txtCarrinhoID.setEnabled(true);
        txtCarrinhoQuantidade.setEnabled(true);
        btAdicionar.setEnabled(true);
        btLimparCarrinho.setEnabled(true);
        tabelaCarrinho.setEnabled(true);
        btFinalizarCompra.setEnabled(true);
    }

    public void LimparCarrinho() {
        try {
            DefaultTableModel tblCarrinho = (DefaultTableModel) tabelaCarrinho.getModel();

            //For para limpar os dodos da tabela carrinho
            for (int i = tabelaCarrinho.getRowCount() - 1; i >= 0; i--) {
                tblCarrinho.removeRow(i);
            }
            //Limpa os campos de texto
            txtCpfCompra.setText("");
            txtCarrinhoID.setText("");
            txtCarrinhoQuantidade.setText("");

            //Valor final recebe 0
            valorFinal = 0.0;

            //Transforma valor final em String
            String valFinal = String.valueOf(valorFinal);
            //Imprime no campo de texto 0 valor final 
            txtValorFinal.setText(valFinal);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro!!!");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaVendedor().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btCancelarVenda;
    private javax.swing.JButton btDeletar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btFinalizarCompra;
    private javax.swing.JButton btIniciarVenda;
    private javax.swing.JButton btLimparCarrinho;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> comboECivil;
    private javax.swing.JComboBox<String> comboSexo;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPvendaRealizada;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabelaCarrinho;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JTable tabelaVenda;
    private javax.swing.JTable tblVendaRealizada;
    private javax.swing.JFormattedTextField txtBCpf;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtBuscaCpf;
    private javax.swing.JTextField txtBuscaNumeroCompra;
    private javax.swing.JTextField txtCarrinhoID;
    private javax.swing.JTextField txtCarrinhoQuantidade;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtCpfCompra;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFiltroMarca;
    private javax.swing.JTextField txtFiltroModelo;
    private javax.swing.JTextField txtFiltroTipo;
    private javax.swing.JFormattedTextField txtFone;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtRua;
    private javax.swing.JTextField txtValorFinal;
    // End of variables declaration//GEN-END:variables

}
